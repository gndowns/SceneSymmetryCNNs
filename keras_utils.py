# Some utility functions for training/testing with Keras
import numpy as np

# Taken From: https://jkjung-avt.github.io/keras-image-cropping/
def random_crop(img, random_crop_size):
  # (assumes channel last format)
  height, width = img.shape[0], img.shape[1]
  dy, dx = random_crop_size
  x = np.random.randint(0, width - dx + 1)
  y = np.random.randint(0, height - dy + 1)
  return img[y:(y+dy), x:(x+dx), :]


def crop_generator(batches, crop_length, nb_channels):
  """Take as input a Keras ImageGen (Iterator) and generate random
  crops from the image batches generated by the original iterator.
  """
  while True:
    batch_x, batch_y = next(batches)
    batch_crops = np.zeros((batch_x.shape[0], crop_length, crop_length, nb_channels))

    for i in range(batch_x.shape[0]):
      batch_crops[i] = random_crop(batch_x[i], (crop_length, crop_length))

    yield (batch_crops, batch_y)
